/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooCruijffPdf.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooCruijffPdf); 

 RooCruijffPdf::RooCruijffPdf(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _m0,
                        RooAbsReal& _sigmaL,
                        RooAbsReal& _sigmaR,
                        RooAbsReal& _alphaL,
                        RooAbsReal& _alphaR) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   m0("m0","m0",this,_m0),
   sigmaL("sigmaL","sigmaL",this,_sigmaL),
   sigmaR("sigmaR","sigmaR",this,_sigmaR),
   alphaL("alphaL","alphaL",this,_alphaL),
   alphaR("alphaR","alphaR",this,_alphaR)
 { 
 } 


 RooCruijffPdf::RooCruijffPdf(const RooCruijffPdf& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   m0("m0",this,other.m0),
   sigmaL("sigmaL",this,other.sigmaL),
   sigmaR("sigmaR",this,other.sigmaR),
   alphaL("alphaL",this,other.alphaL),
   alphaR("alphaR",this,other.alphaR)
 { 
 } 



 Double_t RooCruijffPdf::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   return x<m0?exp(-(x-m0)*(x-m0)/(2*sigmaL*sigmaL+alphaL*(x-m0)*(x-m0))):exp(-(x-m0)*(x-m0)/(2*sigmaR*sigmaR+alphaR*(x-m0)*(x-m0))) ; 
 } 



